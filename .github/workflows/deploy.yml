name: 🚀 Deploy Xpress.Delivery MVP

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-js-version: '18'
        
    - name: 📋 Validate configuration
      run: |
        echo "🔍 Validating application configuration..."
        # Basic validation - check if files exist and are valid
        if [ ! -f "index-modular.html" ]; then
          echo "❌ Main application file not found"
          exit 1
        fi
        if [ ! -f "src/config/env.config.js" ]; then
          echo "❌ Environment configuration not found"
          exit 1
        fi
        echo "✅ Application configuration valid"

    - name: 🔑 Setup SSH key for deployment
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "🔐 Setting up SSH key for borg.tools..."
        mkdir -p ~/.ssh
        echo "${{ secrets.BORG_TOOLS_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H borg.tools >> ~/.ssh/known_hosts
        echo "✅ SSH key configured"

    - name: 🚀 Deploy to borg.tools
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "🚀 Deploying to production server (sendxpress.borg.tools)..."
        ssh vizi@borg.tools './deploy.sh sendxpress main'
        echo "✅ Deployment completed"

    - name: 🧪 Test deployment
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "🧪 Testing production deployment..."
        sleep 5
        HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://sendxpress.borg.tools)
        if [ "$HTTP_CODE" = "200" ]; then
          echo "✅ Production site is responding (HTTP $HTTP_CODE)"
        else
          echo "⚠️ Production site returned HTTP $HTTP_CODE"
        fi

  security-check:
    runs-on: ubuntu-latest
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔒 Check for secrets in code
      run: |
        echo "🔍 Scanning for potential secrets in committed files..."
        
        # Check for common secret patterns
        if grep -r "wojciech@xpress.delivery" xpress-mvp/ --exclude-dir=node_modules --exclude="*.log" || true; then
          echo "⚠️ Found hardcoded email in committed files"
        fi
        
        if grep -r "dupa8dupa" xpress-mvp/ --exclude-dir=node_modules --exclude="*.log" || true; then
          echo "❌ Found hardcoded password in committed files - SECURITY ISSUE!"
          exit 1
        fi
        
        if grep -r "AIzaSy" xpress-mvp/ --exclude-dir=node_modules --exclude="*.log" --exclude=".env.*" || true; then
          echo "⚠️ Found potential Google API key in committed files"
        fi
        
        echo "✅ Security scan completed"
        
    - name: 📋 Validate .gitignore
      run: |
        echo "🔍 Checking .gitignore configuration..."
        if grep -q "\.env" xpress-mvp/.gitignore; then
          echo "✅ .env files are gitignored"
        else
          echo "❌ .env files not in .gitignore - SECURITY ISSUE!"
          exit 1
        fi
        
        if grep -q "config\.local\.js" xpress-mvp/.gitignore; then
          echo "✅ Local config files are gitignored"
        else
          echo "⚠️ Local config files should be gitignored"
        fi
        
        echo "✅ .gitignore validation completed"